# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hapi/services/tiller.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from hapi.chart import chart_pb2 as hapi_dot_chart_dot_chart__pb2
from hapi.chart import config_pb2 as hapi_dot_chart_dot_config__pb2
from hapi.release import release_pb2 as hapi_dot_release_dot_release__pb2
from hapi.release import info_pb2 as hapi_dot_release_dot_info__pb2
from hapi.release import test_run_pb2 as hapi_dot_release_dot_test__run__pb2
from hapi.release import status_pb2 as hapi_dot_release_dot_status__pb2
from hapi.version import version_pb2 as hapi_dot_version_dot_version__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='hapi/services/tiller.proto',
  package='hapi.services.tiller',
  syntax='proto3',
  serialized_pb=_b('\n\x1ahapi/services/tiller.proto\x12\x14hapi.services.tiller\x1a\x16hapi/chart/chart.proto\x1a\x17hapi/chart/config.proto\x1a\x1ahapi/release/release.proto\x1a\x17hapi/release/info.proto\x1a\x1bhapi/release/test_run.proto\x1a\x19hapi/release/status.proto\x1a\x1ahapi/version/version.proto\"\xfe\x01\n\x13ListReleasesRequest\x12\r\n\x05limit\x18\x01 \x01(\x03\x12\x0e\n\x06offset\x18\x02 \x01(\t\x12\x36\n\x07sort_by\x18\x03 \x01(\x0e\x32%.hapi.services.tiller.ListSort.SortBy\x12\x0e\n\x06\x66ilter\x18\x04 \x01(\t\x12<\n\nsort_order\x18\x05 \x01(\x0e\x32(.hapi.services.tiller.ListSort.SortOrder\x12/\n\x0cstatus_codes\x18\x06 \x03(\x0e\x32\x19.hapi.release.Status.Code\x12\x11\n\tnamespace\x18\x07 \x01(\t\"^\n\x08ListSort\"2\n\x06SortBy\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04NAME\x10\x01\x12\x11\n\rLAST_RELEASED\x10\x02\"\x1e\n\tSortOrder\x12\x07\n\x03\x41SC\x10\x00\x12\x08\n\x04\x44\x45SC\x10\x01\"k\n\x14ListReleasesResponse\x12\r\n\x05\x63ount\x18\x01 \x01(\x03\x12\x0c\n\x04next\x18\x02 \x01(\t\x12\r\n\x05total\x18\x03 \x01(\x03\x12\'\n\x08releases\x18\x04 \x03(\x0b\x32\x15.hapi.release.Release\"8\n\x17GetReleaseStatusRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\x05\"]\n\x18GetReleaseStatusResponse\x12\x0c\n\x04name\x18\x01 \x01(\t\x12 \n\x04info\x18\x02 \x01(\x0b\x32\x12.hapi.release.Info\x12\x11\n\tnamespace\x18\x03 \x01(\t\"9\n\x18GetReleaseContentRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\x05\"C\n\x19GetReleaseContentResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\"\xfe\x01\n\x14UpdateReleaseRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12 \n\x05\x63hart\x18\x02 \x01(\x0b\x32\x11.hapi.chart.Chart\x12\"\n\x06values\x18\x03 \x01(\x0b\x32\x12.hapi.chart.Config\x12\x0f\n\x07\x64ry_run\x18\x04 \x01(\x08\x12\x15\n\rdisable_hooks\x18\x05 \x01(\x08\x12\x10\n\x08recreate\x18\x06 \x01(\x08\x12\x0f\n\x07timeout\x18\x07 \x01(\x03\x12\x14\n\x0creset_values\x18\x08 \x01(\x08\x12\x0c\n\x04wait\x18\t \x01(\x08\x12\x14\n\x0creuse_values\x18\n \x01(\x08\x12\r\n\x05\x66orce\x18\x0b \x01(\x08\"?\n\x15UpdateReleaseResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\"\x9f\x01\n\x16RollbackReleaseRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64ry_run\x18\x02 \x01(\x08\x12\x15\n\rdisable_hooks\x18\x03 \x01(\x08\x12\x0f\n\x07version\x18\x04 \x01(\x05\x12\x10\n\x08recreate\x18\x05 \x01(\x08\x12\x0f\n\x07timeout\x18\x06 \x01(\x03\x12\x0c\n\x04wait\x18\x07 \x01(\x08\x12\r\n\x05\x66orce\x18\x08 \x01(\x08\"A\n\x17RollbackReleaseResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\"\xd9\x01\n\x15InstallReleaseRequest\x12 \n\x05\x63hart\x18\x01 \x01(\x0b\x32\x11.hapi.chart.Chart\x12\"\n\x06values\x18\x02 \x01(\x0b\x32\x12.hapi.chart.Config\x12\x0f\n\x07\x64ry_run\x18\x03 \x01(\x08\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x15\n\rdisable_hooks\x18\x05 \x01(\x08\x12\x11\n\tnamespace\x18\x06 \x01(\t\x12\x12\n\nreuse_name\x18\x07 \x01(\x08\x12\x0f\n\x07timeout\x18\x08 \x01(\x03\x12\x0c\n\x04wait\x18\t \x01(\x08\"@\n\x16InstallReleaseResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\"^\n\x17UninstallReleaseRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x15\n\rdisable_hooks\x18\x02 \x01(\x08\x12\r\n\x05purge\x18\x03 \x01(\x08\x12\x0f\n\x07timeout\x18\x04 \x01(\x03\"P\n\x18UninstallReleaseResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\x12\x0c\n\x04info\x18\x02 \x01(\t\"\x13\n\x11GetVersionRequest\"<\n\x12GetVersionResponse\x12&\n\x07Version\x18\x01 \x01(\x0b\x32\x15.hapi.version.Version\".\n\x11GetHistoryRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03max\x18\x02 \x01(\x05\"=\n\x12GetHistoryResponse\x12\'\n\x08releases\x18\x01 \x03(\x0b\x32\x15.hapi.release.Release\"D\n\x12TestReleaseRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07timeout\x18\x02 \x01(\x03\x12\x0f\n\x07\x63leanup\x18\x03 \x01(\x08\"P\n\x13TestReleaseResponse\x12\x0b\n\x03msg\x18\x01 \x01(\t\x12,\n\x06status\x18\x02 \x01(\x0e\x32\x1c.hapi.release.TestRun.Status2\xdb\x08\n\x0eReleaseService\x12i\n\x0cListReleases\x12).hapi.services.tiller.ListReleasesRequest\x1a*.hapi.services.tiller.ListReleasesResponse\"\x00\x30\x01\x12s\n\x10GetReleaseStatus\x12-.hapi.services.tiller.GetReleaseStatusRequest\x1a..hapi.services.tiller.GetReleaseStatusResponse\"\x00\x12v\n\x11GetReleaseContent\x12..hapi.services.tiller.GetReleaseContentRequest\x1a/.hapi.services.tiller.GetReleaseContentResponse\"\x00\x12j\n\rUpdateRelease\x12*.hapi.services.tiller.UpdateReleaseRequest\x1a+.hapi.services.tiller.UpdateReleaseResponse\"\x00\x12m\n\x0eInstallRelease\x12+.hapi.services.tiller.InstallReleaseRequest\x1a,.hapi.services.tiller.InstallReleaseResponse\"\x00\x12s\n\x10UninstallRelease\x12-.hapi.services.tiller.UninstallReleaseRequest\x1a..hapi.services.tiller.UninstallReleaseResponse\"\x00\x12\x61\n\nGetVersion\x12\'.hapi.services.tiller.GetVersionRequest\x1a(.hapi.services.tiller.GetVersionResponse\"\x00\x12p\n\x0fRollbackRelease\x12,.hapi.services.tiller.RollbackReleaseRequest\x1a-.hapi.services.tiller.RollbackReleaseResponse\"\x00\x12\x61\n\nGetHistory\x12\'.hapi.services.tiller.GetHistoryRequest\x1a(.hapi.services.tiller.GetHistoryResponse\"\x00\x12i\n\x0eRunReleaseTest\x12(.hapi.services.tiller.TestReleaseRequest\x1a).hapi.services.tiller.TestReleaseResponse\"\x00\x30\x01\x42\nZ\x08servicesb\x06proto3')
  ,
  dependencies=[hapi_dot_chart_dot_chart__pb2.DESCRIPTOR,hapi_dot_chart_dot_config__pb2.DESCRIPTOR,hapi_dot_release_dot_release__pb2.DESCRIPTOR,hapi_dot_release_dot_info__pb2.DESCRIPTOR,hapi_dot_release_dot_test__run__pb2.DESCRIPTOR,hapi_dot_release_dot_status__pb2.DESCRIPTOR,hapi_dot_version_dot_version__pb2.DESCRIPTOR,])



_LISTSORT_SORTBY = _descriptor.EnumDescriptor(
  name='SortBy',
  full_name='hapi.services.tiller.ListSort.SortBy',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NAME', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LAST_RELEASED', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=507,
  serialized_end=557,
)
_sym_db.RegisterEnumDescriptor(_LISTSORT_SORTBY)

_LISTSORT_SORTORDER = _descriptor.EnumDescriptor(
  name='SortOrder',
  full_name='hapi.services.tiller.ListSort.SortOrder',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ASC', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DESC', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=559,
  serialized_end=589,
)
_sym_db.RegisterEnumDescriptor(_LISTSORT_SORTORDER)


_LISTRELEASESREQUEST = _descriptor.Descriptor(
  name='ListReleasesRequest',
  full_name='hapi.services.tiller.ListReleasesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='limit', full_name='hapi.services.tiller.ListReleasesRequest.limit', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='hapi.services.tiller.ListReleasesRequest.offset', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sort_by', full_name='hapi.services.tiller.ListReleasesRequest.sort_by', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filter', full_name='hapi.services.tiller.ListReleasesRequest.filter', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sort_order', full_name='hapi.services.tiller.ListReleasesRequest.sort_order', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status_codes', full_name='hapi.services.tiller.ListReleasesRequest.status_codes', index=5,
      number=6, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='hapi.services.tiller.ListReleasesRequest.namespace', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=239,
  serialized_end=493,
)


_LISTSORT = _descriptor.Descriptor(
  name='ListSort',
  full_name='hapi.services.tiller.ListSort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LISTSORT_SORTBY,
    _LISTSORT_SORTORDER,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=495,
  serialized_end=589,
)


_LISTRELEASESRESPONSE = _descriptor.Descriptor(
  name='ListReleasesResponse',
  full_name='hapi.services.tiller.ListReleasesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='hapi.services.tiller.ListReleasesResponse.count', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next', full_name='hapi.services.tiller.ListReleasesResponse.next', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total', full_name='hapi.services.tiller.ListReleasesResponse.total', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='releases', full_name='hapi.services.tiller.ListReleasesResponse.releases', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=591,
  serialized_end=698,
)


_GETRELEASESTATUSREQUEST = _descriptor.Descriptor(
  name='GetReleaseStatusRequest',
  full_name='hapi.services.tiller.GetReleaseStatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.GetReleaseStatusRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='hapi.services.tiller.GetReleaseStatusRequest.version', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=700,
  serialized_end=756,
)


_GETRELEASESTATUSRESPONSE = _descriptor.Descriptor(
  name='GetReleaseStatusResponse',
  full_name='hapi.services.tiller.GetReleaseStatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.GetReleaseStatusResponse.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='info', full_name='hapi.services.tiller.GetReleaseStatusResponse.info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='hapi.services.tiller.GetReleaseStatusResponse.namespace', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=758,
  serialized_end=851,
)


_GETRELEASECONTENTREQUEST = _descriptor.Descriptor(
  name='GetReleaseContentRequest',
  full_name='hapi.services.tiller.GetReleaseContentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.GetReleaseContentRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='hapi.services.tiller.GetReleaseContentRequest.version', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=853,
  serialized_end=910,
)


_GETRELEASECONTENTRESPONSE = _descriptor.Descriptor(
  name='GetReleaseContentResponse',
  full_name='hapi.services.tiller.GetReleaseContentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.tiller.GetReleaseContentResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=912,
  serialized_end=979,
)


_UPDATERELEASEREQUEST = _descriptor.Descriptor(
  name='UpdateReleaseRequest',
  full_name='hapi.services.tiller.UpdateReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.UpdateReleaseRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chart', full_name='hapi.services.tiller.UpdateReleaseRequest.chart', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='values', full_name='hapi.services.tiller.UpdateReleaseRequest.values', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dry_run', full_name='hapi.services.tiller.UpdateReleaseRequest.dry_run', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable_hooks', full_name='hapi.services.tiller.UpdateReleaseRequest.disable_hooks', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recreate', full_name='hapi.services.tiller.UpdateReleaseRequest.recreate', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='hapi.services.tiller.UpdateReleaseRequest.timeout', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reset_values', full_name='hapi.services.tiller.UpdateReleaseRequest.reset_values', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='wait', full_name='hapi.services.tiller.UpdateReleaseRequest.wait', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reuse_values', full_name='hapi.services.tiller.UpdateReleaseRequest.reuse_values', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='force', full_name='hapi.services.tiller.UpdateReleaseRequest.force', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=982,
  serialized_end=1236,
)


_UPDATERELEASERESPONSE = _descriptor.Descriptor(
  name='UpdateReleaseResponse',
  full_name='hapi.services.tiller.UpdateReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.tiller.UpdateReleaseResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1238,
  serialized_end=1301,
)


_ROLLBACKRELEASEREQUEST = _descriptor.Descriptor(
  name='RollbackReleaseRequest',
  full_name='hapi.services.tiller.RollbackReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.RollbackReleaseRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dry_run', full_name='hapi.services.tiller.RollbackReleaseRequest.dry_run', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable_hooks', full_name='hapi.services.tiller.RollbackReleaseRequest.disable_hooks', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='hapi.services.tiller.RollbackReleaseRequest.version', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recreate', full_name='hapi.services.tiller.RollbackReleaseRequest.recreate', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='hapi.services.tiller.RollbackReleaseRequest.timeout', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='wait', full_name='hapi.services.tiller.RollbackReleaseRequest.wait', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='force', full_name='hapi.services.tiller.RollbackReleaseRequest.force', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1304,
  serialized_end=1463,
)


_ROLLBACKRELEASERESPONSE = _descriptor.Descriptor(
  name='RollbackReleaseResponse',
  full_name='hapi.services.tiller.RollbackReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.tiller.RollbackReleaseResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1465,
  serialized_end=1530,
)


_INSTALLRELEASEREQUEST = _descriptor.Descriptor(
  name='InstallReleaseRequest',
  full_name='hapi.services.tiller.InstallReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chart', full_name='hapi.services.tiller.InstallReleaseRequest.chart', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='values', full_name='hapi.services.tiller.InstallReleaseRequest.values', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dry_run', full_name='hapi.services.tiller.InstallReleaseRequest.dry_run', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.InstallReleaseRequest.name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable_hooks', full_name='hapi.services.tiller.InstallReleaseRequest.disable_hooks', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='hapi.services.tiller.InstallReleaseRequest.namespace', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reuse_name', full_name='hapi.services.tiller.InstallReleaseRequest.reuse_name', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='hapi.services.tiller.InstallReleaseRequest.timeout', index=7,
      number=8, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='wait', full_name='hapi.services.tiller.InstallReleaseRequest.wait', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1533,
  serialized_end=1750,
)


_INSTALLRELEASERESPONSE = _descriptor.Descriptor(
  name='InstallReleaseResponse',
  full_name='hapi.services.tiller.InstallReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.tiller.InstallReleaseResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1752,
  serialized_end=1816,
)


_UNINSTALLRELEASEREQUEST = _descriptor.Descriptor(
  name='UninstallReleaseRequest',
  full_name='hapi.services.tiller.UninstallReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.UninstallReleaseRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable_hooks', full_name='hapi.services.tiller.UninstallReleaseRequest.disable_hooks', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='purge', full_name='hapi.services.tiller.UninstallReleaseRequest.purge', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='hapi.services.tiller.UninstallReleaseRequest.timeout', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1818,
  serialized_end=1912,
)


_UNINSTALLRELEASERESPONSE = _descriptor.Descriptor(
  name='UninstallReleaseResponse',
  full_name='hapi.services.tiller.UninstallReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.tiller.UninstallReleaseResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='info', full_name='hapi.services.tiller.UninstallReleaseResponse.info', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1914,
  serialized_end=1994,
)


_GETVERSIONREQUEST = _descriptor.Descriptor(
  name='GetVersionRequest',
  full_name='hapi.services.tiller.GetVersionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1996,
  serialized_end=2015,
)


_GETVERSIONRESPONSE = _descriptor.Descriptor(
  name='GetVersionResponse',
  full_name='hapi.services.tiller.GetVersionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Version', full_name='hapi.services.tiller.GetVersionResponse.Version', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2017,
  serialized_end=2077,
)


_GETHISTORYREQUEST = _descriptor.Descriptor(
  name='GetHistoryRequest',
  full_name='hapi.services.tiller.GetHistoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.GetHistoryRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='hapi.services.tiller.GetHistoryRequest.max', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2079,
  serialized_end=2125,
)


_GETHISTORYRESPONSE = _descriptor.Descriptor(
  name='GetHistoryResponse',
  full_name='hapi.services.tiller.GetHistoryResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='releases', full_name='hapi.services.tiller.GetHistoryResponse.releases', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2127,
  serialized_end=2188,
)


_TESTRELEASEREQUEST = _descriptor.Descriptor(
  name='TestReleaseRequest',
  full_name='hapi.services.tiller.TestReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.tiller.TestReleaseRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='hapi.services.tiller.TestReleaseRequest.timeout', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cleanup', full_name='hapi.services.tiller.TestReleaseRequest.cleanup', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2190,
  serialized_end=2258,
)


_TESTRELEASERESPONSE = _descriptor.Descriptor(
  name='TestReleaseResponse',
  full_name='hapi.services.tiller.TestReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='hapi.services.tiller.TestReleaseResponse.msg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='hapi.services.tiller.TestReleaseResponse.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2260,
  serialized_end=2340,
)

_LISTRELEASESREQUEST.fields_by_name['sort_by'].enum_type = _LISTSORT_SORTBY
_LISTRELEASESREQUEST.fields_by_name['sort_order'].enum_type = _LISTSORT_SORTORDER
_LISTRELEASESREQUEST.fields_by_name['status_codes'].enum_type = hapi_dot_release_dot_status__pb2._STATUS_CODE
_LISTSORT_SORTBY.containing_type = _LISTSORT
_LISTSORT_SORTORDER.containing_type = _LISTSORT
_LISTRELEASESRESPONSE.fields_by_name['releases'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_GETRELEASESTATUSRESPONSE.fields_by_name['info'].message_type = hapi_dot_release_dot_info__pb2._INFO
_GETRELEASECONTENTRESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_UPDATERELEASEREQUEST.fields_by_name['chart'].message_type = hapi_dot_chart_dot_chart__pb2._CHART
_UPDATERELEASEREQUEST.fields_by_name['values'].message_type = hapi_dot_chart_dot_config__pb2._CONFIG
_UPDATERELEASERESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_ROLLBACKRELEASERESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_INSTALLRELEASEREQUEST.fields_by_name['chart'].message_type = hapi_dot_chart_dot_chart__pb2._CHART
_INSTALLRELEASEREQUEST.fields_by_name['values'].message_type = hapi_dot_chart_dot_config__pb2._CONFIG
_INSTALLRELEASERESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_UNINSTALLRELEASERESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_GETVERSIONRESPONSE.fields_by_name['Version'].message_type = hapi_dot_version_dot_version__pb2._VERSION
_GETHISTORYRESPONSE.fields_by_name['releases'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_TESTRELEASERESPONSE.fields_by_name['status'].enum_type = hapi_dot_release_dot_test__run__pb2._TESTRUN_STATUS
DESCRIPTOR.message_types_by_name['ListReleasesRequest'] = _LISTRELEASESREQUEST
DESCRIPTOR.message_types_by_name['ListSort'] = _LISTSORT
DESCRIPTOR.message_types_by_name['ListReleasesResponse'] = _LISTRELEASESRESPONSE
DESCRIPTOR.message_types_by_name['GetReleaseStatusRequest'] = _GETRELEASESTATUSREQUEST
DESCRIPTOR.message_types_by_name['GetReleaseStatusResponse'] = _GETRELEASESTATUSRESPONSE
DESCRIPTOR.message_types_by_name['GetReleaseContentRequest'] = _GETRELEASECONTENTREQUEST
DESCRIPTOR.message_types_by_name['GetReleaseContentResponse'] = _GETRELEASECONTENTRESPONSE
DESCRIPTOR.message_types_by_name['UpdateReleaseRequest'] = _UPDATERELEASEREQUEST
DESCRIPTOR.message_types_by_name['UpdateReleaseResponse'] = _UPDATERELEASERESPONSE
DESCRIPTOR.message_types_by_name['RollbackReleaseRequest'] = _ROLLBACKRELEASEREQUEST
DESCRIPTOR.message_types_by_name['RollbackReleaseResponse'] = _ROLLBACKRELEASERESPONSE
DESCRIPTOR.message_types_by_name['InstallReleaseRequest'] = _INSTALLRELEASEREQUEST
DESCRIPTOR.message_types_by_name['InstallReleaseResponse'] = _INSTALLRELEASERESPONSE
DESCRIPTOR.message_types_by_name['UninstallReleaseRequest'] = _UNINSTALLRELEASEREQUEST
DESCRIPTOR.message_types_by_name['UninstallReleaseResponse'] = _UNINSTALLRELEASERESPONSE
DESCRIPTOR.message_types_by_name['GetVersionRequest'] = _GETVERSIONREQUEST
DESCRIPTOR.message_types_by_name['GetVersionResponse'] = _GETVERSIONRESPONSE
DESCRIPTOR.message_types_by_name['GetHistoryRequest'] = _GETHISTORYREQUEST
DESCRIPTOR.message_types_by_name['GetHistoryResponse'] = _GETHISTORYRESPONSE
DESCRIPTOR.message_types_by_name['TestReleaseRequest'] = _TESTRELEASEREQUEST
DESCRIPTOR.message_types_by_name['TestReleaseResponse'] = _TESTRELEASERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ListReleasesRequest = _reflection.GeneratedProtocolMessageType('ListReleasesRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTRELEASESREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.ListReleasesRequest)
  ))
_sym_db.RegisterMessage(ListReleasesRequest)

ListSort = _reflection.GeneratedProtocolMessageType('ListSort', (_message.Message,), dict(
  DESCRIPTOR = _LISTSORT,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.ListSort)
  ))
_sym_db.RegisterMessage(ListSort)

ListReleasesResponse = _reflection.GeneratedProtocolMessageType('ListReleasesResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTRELEASESRESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.ListReleasesResponse)
  ))
_sym_db.RegisterMessage(ListReleasesResponse)

GetReleaseStatusRequest = _reflection.GeneratedProtocolMessageType('GetReleaseStatusRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETRELEASESTATUSREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.GetReleaseStatusRequest)
  ))
_sym_db.RegisterMessage(GetReleaseStatusRequest)

GetReleaseStatusResponse = _reflection.GeneratedProtocolMessageType('GetReleaseStatusResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETRELEASESTATUSRESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.GetReleaseStatusResponse)
  ))
_sym_db.RegisterMessage(GetReleaseStatusResponse)

GetReleaseContentRequest = _reflection.GeneratedProtocolMessageType('GetReleaseContentRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETRELEASECONTENTREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.GetReleaseContentRequest)
  ))
_sym_db.RegisterMessage(GetReleaseContentRequest)

GetReleaseContentResponse = _reflection.GeneratedProtocolMessageType('GetReleaseContentResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETRELEASECONTENTRESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.GetReleaseContentResponse)
  ))
_sym_db.RegisterMessage(GetReleaseContentResponse)

UpdateReleaseRequest = _reflection.GeneratedProtocolMessageType('UpdateReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATERELEASEREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.UpdateReleaseRequest)
  ))
_sym_db.RegisterMessage(UpdateReleaseRequest)

UpdateReleaseResponse = _reflection.GeneratedProtocolMessageType('UpdateReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _UPDATERELEASERESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.UpdateReleaseResponse)
  ))
_sym_db.RegisterMessage(UpdateReleaseResponse)

RollbackReleaseRequest = _reflection.GeneratedProtocolMessageType('RollbackReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _ROLLBACKRELEASEREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.RollbackReleaseRequest)
  ))
_sym_db.RegisterMessage(RollbackReleaseRequest)

RollbackReleaseResponse = _reflection.GeneratedProtocolMessageType('RollbackReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _ROLLBACKRELEASERESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.RollbackReleaseResponse)
  ))
_sym_db.RegisterMessage(RollbackReleaseResponse)

InstallReleaseRequest = _reflection.GeneratedProtocolMessageType('InstallReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _INSTALLRELEASEREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.InstallReleaseRequest)
  ))
_sym_db.RegisterMessage(InstallReleaseRequest)

InstallReleaseResponse = _reflection.GeneratedProtocolMessageType('InstallReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _INSTALLRELEASERESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.InstallReleaseResponse)
  ))
_sym_db.RegisterMessage(InstallReleaseResponse)

UninstallReleaseRequest = _reflection.GeneratedProtocolMessageType('UninstallReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _UNINSTALLRELEASEREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.UninstallReleaseRequest)
  ))
_sym_db.RegisterMessage(UninstallReleaseRequest)

UninstallReleaseResponse = _reflection.GeneratedProtocolMessageType('UninstallReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _UNINSTALLRELEASERESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.UninstallReleaseResponse)
  ))
_sym_db.RegisterMessage(UninstallReleaseResponse)

GetVersionRequest = _reflection.GeneratedProtocolMessageType('GetVersionRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETVERSIONREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.GetVersionRequest)
  ))
_sym_db.RegisterMessage(GetVersionRequest)

GetVersionResponse = _reflection.GeneratedProtocolMessageType('GetVersionResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETVERSIONRESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.GetVersionResponse)
  ))
_sym_db.RegisterMessage(GetVersionResponse)

GetHistoryRequest = _reflection.GeneratedProtocolMessageType('GetHistoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETHISTORYREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.GetHistoryRequest)
  ))
_sym_db.RegisterMessage(GetHistoryRequest)

GetHistoryResponse = _reflection.GeneratedProtocolMessageType('GetHistoryResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETHISTORYRESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.GetHistoryResponse)
  ))
_sym_db.RegisterMessage(GetHistoryResponse)

TestReleaseRequest = _reflection.GeneratedProtocolMessageType('TestReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _TESTRELEASEREQUEST,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.TestReleaseRequest)
  ))
_sym_db.RegisterMessage(TestReleaseRequest)

TestReleaseResponse = _reflection.GeneratedProtocolMessageType('TestReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _TESTRELEASERESPONSE,
  __module__ = 'hapi.services.tiller_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.tiller.TestReleaseResponse)
  ))
_sym_db.RegisterMessage(TestReleaseResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\010services'))

_RELEASESERVICE = _descriptor.ServiceDescriptor(
  name='ReleaseService',
  full_name='hapi.services.tiller.ReleaseService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=2343,
  serialized_end=3458,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListReleases',
    full_name='hapi.services.tiller.ReleaseService.ListReleases',
    index=0,
    containing_service=None,
    input_type=_LISTRELEASESREQUEST,
    output_type=_LISTRELEASESRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetReleaseStatus',
    full_name='hapi.services.tiller.ReleaseService.GetReleaseStatus',
    index=1,
    containing_service=None,
    input_type=_GETRELEASESTATUSREQUEST,
    output_type=_GETRELEASESTATUSRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetReleaseContent',
    full_name='hapi.services.tiller.ReleaseService.GetReleaseContent',
    index=2,
    containing_service=None,
    input_type=_GETRELEASECONTENTREQUEST,
    output_type=_GETRELEASECONTENTRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateRelease',
    full_name='hapi.services.tiller.ReleaseService.UpdateRelease',
    index=3,
    containing_service=None,
    input_type=_UPDATERELEASEREQUEST,
    output_type=_UPDATERELEASERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='InstallRelease',
    full_name='hapi.services.tiller.ReleaseService.InstallRelease',
    index=4,
    containing_service=None,
    input_type=_INSTALLRELEASEREQUEST,
    output_type=_INSTALLRELEASERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UninstallRelease',
    full_name='hapi.services.tiller.ReleaseService.UninstallRelease',
    index=5,
    containing_service=None,
    input_type=_UNINSTALLRELEASEREQUEST,
    output_type=_UNINSTALLRELEASERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetVersion',
    full_name='hapi.services.tiller.ReleaseService.GetVersion',
    index=6,
    containing_service=None,
    input_type=_GETVERSIONREQUEST,
    output_type=_GETVERSIONRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RollbackRelease',
    full_name='hapi.services.tiller.ReleaseService.RollbackRelease',
    index=7,
    containing_service=None,
    input_type=_ROLLBACKRELEASEREQUEST,
    output_type=_ROLLBACKRELEASERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetHistory',
    full_name='hapi.services.tiller.ReleaseService.GetHistory',
    index=8,
    containing_service=None,
    input_type=_GETHISTORYREQUEST,
    output_type=_GETHISTORYRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RunReleaseTest',
    full_name='hapi.services.tiller.ReleaseService.RunReleaseTest',
    index=9,
    containing_service=None,
    input_type=_TESTRELEASEREQUEST,
    output_type=_TESTRELEASERESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_RELEASESERVICE)

DESCRIPTOR.services_by_name['ReleaseService'] = _RELEASESERVICE

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ReleaseServiceStub(object):
    """ReleaseService is the service that a helm application uses to mutate,
    query, and manage releases.

    		Release: A named installation composed of a chart and
    				 config. At any given time a release has one
    				 chart and one config.

    		Config:  A config is a YAML file that supplies values
    				 to the parametrizable templates of a chart.

    		Chart:   A chart is a helm package that contains
    				 metadata, a default config, zero or more
    				 optionally parameterizable templates, and
    				 zero or more charts (dependencies).
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.ListReleases = channel.unary_stream(
          '/hapi.services.tiller.ReleaseService/ListReleases',
          request_serializer=ListReleasesRequest.SerializeToString,
          response_deserializer=ListReleasesResponse.FromString,
          )
      self.GetReleaseStatus = channel.unary_unary(
          '/hapi.services.tiller.ReleaseService/GetReleaseStatus',
          request_serializer=GetReleaseStatusRequest.SerializeToString,
          response_deserializer=GetReleaseStatusResponse.FromString,
          )
      self.GetReleaseContent = channel.unary_unary(
          '/hapi.services.tiller.ReleaseService/GetReleaseContent',
          request_serializer=GetReleaseContentRequest.SerializeToString,
          response_deserializer=GetReleaseContentResponse.FromString,
          )
      self.UpdateRelease = channel.unary_unary(
          '/hapi.services.tiller.ReleaseService/UpdateRelease',
          request_serializer=UpdateReleaseRequest.SerializeToString,
          response_deserializer=UpdateReleaseResponse.FromString,
          )
      self.InstallRelease = channel.unary_unary(
          '/hapi.services.tiller.ReleaseService/InstallRelease',
          request_serializer=InstallReleaseRequest.SerializeToString,
          response_deserializer=InstallReleaseResponse.FromString,
          )
      self.UninstallRelease = channel.unary_unary(
          '/hapi.services.tiller.ReleaseService/UninstallRelease',
          request_serializer=UninstallReleaseRequest.SerializeToString,
          response_deserializer=UninstallReleaseResponse.FromString,
          )
      self.GetVersion = channel.unary_unary(
          '/hapi.services.tiller.ReleaseService/GetVersion',
          request_serializer=GetVersionRequest.SerializeToString,
          response_deserializer=GetVersionResponse.FromString,
          )
      self.RollbackRelease = channel.unary_unary(
          '/hapi.services.tiller.ReleaseService/RollbackRelease',
          request_serializer=RollbackReleaseRequest.SerializeToString,
          response_deserializer=RollbackReleaseResponse.FromString,
          )
      self.GetHistory = channel.unary_unary(
          '/hapi.services.tiller.ReleaseService/GetHistory',
          request_serializer=GetHistoryRequest.SerializeToString,
          response_deserializer=GetHistoryResponse.FromString,
          )
      self.RunReleaseTest = channel.unary_stream(
          '/hapi.services.tiller.ReleaseService/RunReleaseTest',
          request_serializer=TestReleaseRequest.SerializeToString,
          response_deserializer=TestReleaseResponse.FromString,
          )


  class ReleaseServiceServicer(object):
    """ReleaseService is the service that a helm application uses to mutate,
    query, and manage releases.

    		Release: A named installation composed of a chart and
    				 config. At any given time a release has one
    				 chart and one config.

    		Config:  A config is a YAML file that supplies values
    				 to the parametrizable templates of a chart.

    		Chart:   A chart is a helm package that contains
    				 metadata, a default config, zero or more
    				 optionally parameterizable templates, and
    				 zero or more charts (dependencies).
    """

    def ListReleases(self, request, context):
      """ListReleases retrieves release history.
      TODO: Allow filtering the set of releases by
      release status. By default, ListAllReleases returns the releases who
      current status is "Active".
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetReleaseStatus(self, request, context):
      """GetReleasesStatus retrieves status information for the specified release.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetReleaseContent(self, request, context):
      """GetReleaseContent retrieves the release content (chart + value) for the specified release.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateRelease(self, request, context):
      """UpdateRelease updates release content.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def InstallRelease(self, request, context):
      """InstallRelease requests installation of a chart as a new release.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UninstallRelease(self, request, context):
      """UninstallRelease requests deletion of a named release.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
      """GetVersion returns the current version of the server.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RollbackRelease(self, request, context):
      """RollbackRelease rolls back a release to a previous version.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetHistory(self, request, context):
      """ReleaseHistory retrieves a releasse's history.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RunReleaseTest(self, request, context):
      """RunReleaseTest executes the tests defined of a named release
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ReleaseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ListReleases': grpc.unary_stream_rpc_method_handler(
            servicer.ListReleases,
            request_deserializer=ListReleasesRequest.FromString,
            response_serializer=ListReleasesResponse.SerializeToString,
        ),
        'GetReleaseStatus': grpc.unary_unary_rpc_method_handler(
            servicer.GetReleaseStatus,
            request_deserializer=GetReleaseStatusRequest.FromString,
            response_serializer=GetReleaseStatusResponse.SerializeToString,
        ),
        'GetReleaseContent': grpc.unary_unary_rpc_method_handler(
            servicer.GetReleaseContent,
            request_deserializer=GetReleaseContentRequest.FromString,
            response_serializer=GetReleaseContentResponse.SerializeToString,
        ),
        'UpdateRelease': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateRelease,
            request_deserializer=UpdateReleaseRequest.FromString,
            response_serializer=UpdateReleaseResponse.SerializeToString,
        ),
        'InstallRelease': grpc.unary_unary_rpc_method_handler(
            servicer.InstallRelease,
            request_deserializer=InstallReleaseRequest.FromString,
            response_serializer=InstallReleaseResponse.SerializeToString,
        ),
        'UninstallRelease': grpc.unary_unary_rpc_method_handler(
            servicer.UninstallRelease,
            request_deserializer=UninstallReleaseRequest.FromString,
            response_serializer=UninstallReleaseResponse.SerializeToString,
        ),
        'GetVersion': grpc.unary_unary_rpc_method_handler(
            servicer.GetVersion,
            request_deserializer=GetVersionRequest.FromString,
            response_serializer=GetVersionResponse.SerializeToString,
        ),
        'RollbackRelease': grpc.unary_unary_rpc_method_handler(
            servicer.RollbackRelease,
            request_deserializer=RollbackReleaseRequest.FromString,
            response_serializer=RollbackReleaseResponse.SerializeToString,
        ),
        'GetHistory': grpc.unary_unary_rpc_method_handler(
            servicer.GetHistory,
            request_deserializer=GetHistoryRequest.FromString,
            response_serializer=GetHistoryResponse.SerializeToString,
        ),
        'RunReleaseTest': grpc.unary_stream_rpc_method_handler(
            servicer.RunReleaseTest,
            request_deserializer=TestReleaseRequest.FromString,
            response_serializer=TestReleaseResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'hapi.services.tiller.ReleaseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaReleaseServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """ReleaseService is the service that a helm application uses to mutate,
    query, and manage releases.

    		Release: A named installation composed of a chart and
    				 config. At any given time a release has one
    				 chart and one config.

    		Config:  A config is a YAML file that supplies values
    				 to the parametrizable templates of a chart.

    		Chart:   A chart is a helm package that contains
    				 metadata, a default config, zero or more
    				 optionally parameterizable templates, and
    				 zero or more charts (dependencies).
    """
    def ListReleases(self, request, context):
      """ListReleases retrieves release history.
      TODO: Allow filtering the set of releases by
      release status. By default, ListAllReleases returns the releases who
      current status is "Active".
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetReleaseStatus(self, request, context):
      """GetReleasesStatus retrieves status information for the specified release.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetReleaseContent(self, request, context):
      """GetReleaseContent retrieves the release content (chart + value) for the specified release.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateRelease(self, request, context):
      """UpdateRelease updates release content.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def InstallRelease(self, request, context):
      """InstallRelease requests installation of a chart as a new release.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UninstallRelease(self, request, context):
      """UninstallRelease requests deletion of a named release.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetVersion(self, request, context):
      """GetVersion returns the current version of the server.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RollbackRelease(self, request, context):
      """RollbackRelease rolls back a release to a previous version.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetHistory(self, request, context):
      """ReleaseHistory retrieves a releasse's history.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RunReleaseTest(self, request, context):
      """RunReleaseTest executes the tests defined of a named release
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaReleaseServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """ReleaseService is the service that a helm application uses to mutate,
    query, and manage releases.

    		Release: A named installation composed of a chart and
    				 config. At any given time a release has one
    				 chart and one config.

    		Config:  A config is a YAML file that supplies values
    				 to the parametrizable templates of a chart.

    		Chart:   A chart is a helm package that contains
    				 metadata, a default config, zero or more
    				 optionally parameterizable templates, and
    				 zero or more charts (dependencies).
    """
    def ListReleases(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ListReleases retrieves release history.
      TODO: Allow filtering the set of releases by
      release status. By default, ListAllReleases returns the releases who
      current status is "Active".
      """
      raise NotImplementedError()
    def GetReleaseStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """GetReleasesStatus retrieves status information for the specified release.
      """
      raise NotImplementedError()
    GetReleaseStatus.future = None
    def GetReleaseContent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """GetReleaseContent retrieves the release content (chart + value) for the specified release.
      """
      raise NotImplementedError()
    GetReleaseContent.future = None
    def UpdateRelease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """UpdateRelease updates release content.
      """
      raise NotImplementedError()
    UpdateRelease.future = None
    def InstallRelease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """InstallRelease requests installation of a chart as a new release.
      """
      raise NotImplementedError()
    InstallRelease.future = None
    def UninstallRelease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """UninstallRelease requests deletion of a named release.
      """
      raise NotImplementedError()
    UninstallRelease.future = None
    def GetVersion(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """GetVersion returns the current version of the server.
      """
      raise NotImplementedError()
    GetVersion.future = None
    def RollbackRelease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """RollbackRelease rolls back a release to a previous version.
      """
      raise NotImplementedError()
    RollbackRelease.future = None
    def GetHistory(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ReleaseHistory retrieves a releasse's history.
      """
      raise NotImplementedError()
    GetHistory.future = None
    def RunReleaseTest(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """RunReleaseTest executes the tests defined of a named release
      """
      raise NotImplementedError()


  def beta_create_ReleaseService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('hapi.services.tiller.ReleaseService', 'GetHistory'): GetHistoryRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'GetReleaseContent'): GetReleaseContentRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'GetReleaseStatus'): GetReleaseStatusRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'GetVersion'): GetVersionRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'InstallRelease'): InstallReleaseRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'ListReleases'): ListReleasesRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'RollbackRelease'): RollbackReleaseRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'RunReleaseTest'): TestReleaseRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'UninstallRelease'): UninstallReleaseRequest.FromString,
      ('hapi.services.tiller.ReleaseService', 'UpdateRelease'): UpdateReleaseRequest.FromString,
    }
    response_serializers = {
      ('hapi.services.tiller.ReleaseService', 'GetHistory'): GetHistoryResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'GetReleaseContent'): GetReleaseContentResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'GetReleaseStatus'): GetReleaseStatusResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'GetVersion'): GetVersionResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'InstallRelease'): InstallReleaseResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'ListReleases'): ListReleasesResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'RollbackRelease'): RollbackReleaseResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'RunReleaseTest'): TestReleaseResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'UninstallRelease'): UninstallReleaseResponse.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'UpdateRelease'): UpdateReleaseResponse.SerializeToString,
    }
    method_implementations = {
      ('hapi.services.tiller.ReleaseService', 'GetHistory'): face_utilities.unary_unary_inline(servicer.GetHistory),
      ('hapi.services.tiller.ReleaseService', 'GetReleaseContent'): face_utilities.unary_unary_inline(servicer.GetReleaseContent),
      ('hapi.services.tiller.ReleaseService', 'GetReleaseStatus'): face_utilities.unary_unary_inline(servicer.GetReleaseStatus),
      ('hapi.services.tiller.ReleaseService', 'GetVersion'): face_utilities.unary_unary_inline(servicer.GetVersion),
      ('hapi.services.tiller.ReleaseService', 'InstallRelease'): face_utilities.unary_unary_inline(servicer.InstallRelease),
      ('hapi.services.tiller.ReleaseService', 'ListReleases'): face_utilities.unary_stream_inline(servicer.ListReleases),
      ('hapi.services.tiller.ReleaseService', 'RollbackRelease'): face_utilities.unary_unary_inline(servicer.RollbackRelease),
      ('hapi.services.tiller.ReleaseService', 'RunReleaseTest'): face_utilities.unary_stream_inline(servicer.RunReleaseTest),
      ('hapi.services.tiller.ReleaseService', 'UninstallRelease'): face_utilities.unary_unary_inline(servicer.UninstallRelease),
      ('hapi.services.tiller.ReleaseService', 'UpdateRelease'): face_utilities.unary_unary_inline(servicer.UpdateRelease),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ReleaseService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('hapi.services.tiller.ReleaseService', 'GetHistory'): GetHistoryRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'GetReleaseContent'): GetReleaseContentRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'GetReleaseStatus'): GetReleaseStatusRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'GetVersion'): GetVersionRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'InstallRelease'): InstallReleaseRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'ListReleases'): ListReleasesRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'RollbackRelease'): RollbackReleaseRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'RunReleaseTest'): TestReleaseRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'UninstallRelease'): UninstallReleaseRequest.SerializeToString,
      ('hapi.services.tiller.ReleaseService', 'UpdateRelease'): UpdateReleaseRequest.SerializeToString,
    }
    response_deserializers = {
      ('hapi.services.tiller.ReleaseService', 'GetHistory'): GetHistoryResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'GetReleaseContent'): GetReleaseContentResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'GetReleaseStatus'): GetReleaseStatusResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'GetVersion'): GetVersionResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'InstallRelease'): InstallReleaseResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'ListReleases'): ListReleasesResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'RollbackRelease'): RollbackReleaseResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'RunReleaseTest'): TestReleaseResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'UninstallRelease'): UninstallReleaseResponse.FromString,
      ('hapi.services.tiller.ReleaseService', 'UpdateRelease'): UpdateReleaseResponse.FromString,
    }
    cardinalities = {
      'GetHistory': cardinality.Cardinality.UNARY_UNARY,
      'GetReleaseContent': cardinality.Cardinality.UNARY_UNARY,
      'GetReleaseStatus': cardinality.Cardinality.UNARY_UNARY,
      'GetVersion': cardinality.Cardinality.UNARY_UNARY,
      'InstallRelease': cardinality.Cardinality.UNARY_UNARY,
      'ListReleases': cardinality.Cardinality.UNARY_STREAM,
      'RollbackRelease': cardinality.Cardinality.UNARY_UNARY,
      'RunReleaseTest': cardinality.Cardinality.UNARY_STREAM,
      'UninstallRelease': cardinality.Cardinality.UNARY_UNARY,
      'UpdateRelease': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'hapi.services.tiller.ReleaseService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
