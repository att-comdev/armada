{
  "comments": [
    {
      "key": {
        "uuid": "577e60ec_649b95cc",
        "filename": "armada/api/controller/armada.py",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-05-16T20:51:48Z",
      "side": 1,
      "message": "I think the answer to this is No, but can this ever reveal sensitive data in the logs?",
      "range": {
        "startLine": 100,
        "startChar": 64,
        "endLine": 100,
        "endChar": 74
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a26abc0d_559412c7",
        "filename": "armada/api/controller/armada.py",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-05-16T21:00:18Z",
      "side": 1,
      "message": "This is just the list of installs, upgrades, and helm chart diffs.  I\u0027m not actually sure if a helm chart diff can contain sensitive data, but we\u0027d be exposing the same info in other places... worth a second look.",
      "parentUuid": "577e60ec_649b95cc",
      "range": {
        "startLine": 100,
        "startChar": 64,
        "endLine": 100,
        "endChar": 74
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0c7ec7f_bdfd8818",
        "filename": "armada/handlers/armada.py",
        "patchSetId": 4
      },
      "lineNbr": 377,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-05-16T20:51:48Z",
      "side": 1,
      "message": "++ Nice to see some helper functions here",
      "range": {
        "startLine": 377,
        "startChar": 29,
        "endLine": 377,
        "endChar": 46
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e759228b_336315ce",
        "filename": "armada/handlers/armada.py",
        "patchSetId": 4
      },
      "lineNbr": 382,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-05-16T20:51:48Z",
      "side": 1,
      "message": "I tried this out quickly using a test, and it appears to sort, but I\u0027m unsure whether this\u0027ll guarantee the exact order each time. You MAY need to wrap this in sorted(tuple(wait_labels.items())) but I\u0027m not 100%.",
      "range": {
        "startLine": 382,
        "startChar": 49,
        "endLine": 382,
        "endChar": 75
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94f28b58_04283412",
        "filename": "armada/handlers/armada.py",
        "patchSetId": 4
      },
      "lineNbr": 382,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-05-16T21:00:18Z",
      "side": 1,
      "message": "The order coming out later isn\u0027t particularly important, but I\u0027ll definitely double check the logic here.",
      "parentUuid": "e759228b_336315ce",
      "range": {
        "startLine": 382,
        "startChar": 49,
        "endLine": 382,
        "endChar": 75
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5eddfbcf_e0785172",
        "filename": "armada/handlers/armada.py",
        "patchSetId": 4
      },
      "lineNbr": 382,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-05-16T21:04:14Z",
      "side": 1,
      "message": "Well I inferred that ns_label_set is trying to keep track of all the unique wait labels per namespace, and I wasn\u0027t sure whether the wait_labels can ever be different across charts.",
      "parentUuid": "94f28b58_04283412",
      "range": {
        "startLine": 382,
        "startChar": 49,
        "endLine": 382,
        "endChar": 75
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be797c0d_920849c1",
        "filename": "armada/handlers/armada.py",
        "patchSetId": 4
      },
      "lineNbr": 382,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-05-16T21:25:14Z",
      "side": 1,
      "message": "They sure can!  But again, at the point we use this full list, the order we originally saw them doesn\u0027t really matter.",
      "parentUuid": "5eddfbcf_e0785172",
      "range": {
        "startLine": 382,
        "startChar": 49,
        "endLine": 382,
        "endChar": 75
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e0dc6cd_0ce619d6",
        "filename": "armada/handlers/armada.py",
        "patchSetId": 4
      },
      "lineNbr": 411,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-05-16T20:51:48Z",
      "side": 1,
      "message": "Ditto",
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f992bd9_5e3d1c98",
        "filename": "armada/handlers/tiller.py",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-05-16T20:51:48Z",
      "side": 1,
      "message": "Maybe consider moving into armada.const or some such later?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 41,
        "endChar": 27
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd5f5cf_08c40d63",
        "filename": "armada/handlers/tiller.py",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-05-16T21:00:18Z",
      "side": 1,
      "message": "I\u0027d say the first 2 are good candidates for armada.const, the others are just functional constants to avoid magic numbers in the code.\nWill consider during refactors here, thanks.",
      "parentUuid": "9f992bd9_5e3d1c98",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 41,
        "endChar": 27
      },
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e50bf50a_4a36b9c8",
        "filename": "armada/utils/validate.py",
        "patchSetId": 4
      },
      "lineNbr": 193,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-05-16T20:51:48Z",
      "side": 1,
      "message": "Later this could be added as an info-level message.",
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fda38bb_9946c77a",
        "filename": "armada/utils/validate.py",
        "patchSetId": 4
      },
      "lineNbr": 193,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-05-16T21:00:18Z",
      "side": 1,
      "message": "This particular message (pretty-formatted JSON) is too noisy on info, I was actually dropping it to debug here, with a new info just saying something happened!",
      "parentUuid": "e50bf50a_4a36b9c8",
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ade05207_8580cb93",
        "filename": "armada/utils/validate.py",
        "patchSetId": 4
      },
      "lineNbr": 193,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-05-16T21:05:22Z",
      "side": 1,
      "message": "Er, I meant as an info-level ValidationMessage that is returned in the `messages` section of the server response, but that might be noisy too.",
      "parentUuid": "6fda38bb_9946c77a",
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "274ffc00_86c727dd",
        "filename": "armada/utils/validate.py",
        "patchSetId": 4
      },
      "lineNbr": 193,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-05-16T21:25:14Z",
      "side": 1,
      "message": "Oh!  perhaps the comment is just in an odd location, but check out L194 immediately below... :)\n\nShipyard specifically doesn\u0027t want this message.  Of course, Shipyard isn\u0027t necessarily the ONLY possible client of Armada API.",
      "parentUuid": "ade05207_8580cb93",
      "revId": "204906d3e984d972a703699cf5af13deb9f81de0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}